//
// File generated by rootcint at Wed Mar  2 16:25:59 2022

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME StlDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StlDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<float> >

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

/********************************************************
* StlDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStlDict();

extern "C" void G__set_cpp_environmentStlDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/Stl.h");
  G__cpp_reset_tagtableStlDict();
}
#include <new>
extern "C" int G__cpp_dllrevStlDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static int G__StlDict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *((vector<int,allocator<int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator=(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->reserve((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->push_back(*(vector<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->swap(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *(vector<int,allocator<int> >*) libp->para[1].ref);
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[1])
, *(vector<int,allocator<int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_174_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR;
static int G__StlDict_174_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff+(sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >)*i)))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__StlDict_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StlDict_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__StlDict_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStlDict {
 public:
  G__Sizep2memfuncStlDict(): p(&G__Sizep2memfuncStlDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStlDict::*p)();
};

size_t G__get_sizep2memfuncStlDict()
{
  G__Sizep2memfuncStlDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStlDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStlDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static void G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   { vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > *p; p=(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStlDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__StlDict_174_0_1, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__StlDict_174_0_2, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__StlDict_174_0_3, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__StlDict_174_0_4, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__StlDict_174_0_5, 117, G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__StlDict_174_0_6, 117, G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__StlDict_174_0_7, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__StlDict_174_0_8, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__StlDict_174_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__StlDict_174_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz u 'vector<int,allocator<int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__StlDict_174_0_11, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__StlDict_174_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StlDict_174_0_13, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StlDict_174_0_14, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__StlDict_174_0_15, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__StlDict_174_0_16, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n u 'vector<int,allocator<int> >' - 11 '(vector<int,allocator<int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__StlDict_174_0_17, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__StlDict_174_0_18, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StlDict_174_0_19, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__StlDict_174_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__StlDict_174_0_21, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__StlDict_174_0_22, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__StlDict_174_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__StlDict_174_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_174_0_25, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_174_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first "
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_174_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n "
"u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__StlDict_174_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__StlDict_174_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__StlDict_174_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StlDict_174_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >", 7302, G__StlDict_174_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__StlDict_178_0_1, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__StlDict_178_0_2, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__StlDict_178_0_3, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__StlDict_178_0_4, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__StlDict_178_0_5, 117, G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__StlDict_178_0_6, 117, G__get_linked_tagnum(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__StlDict_178_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__StlDict_178_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__StlDict_178_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__StlDict_178_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__StlDict_178_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__StlDict_178_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StlDict_178_0_13, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StlDict_178_0_14, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__StlDict_178_0_15, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__StlDict_178_0_16, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__StlDict_178_0_17, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__StlDict_178_0_18, 105, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StlDict_178_0_19, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__StlDict_178_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__StlDict_178_0_21, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__StlDict_178_0_22, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__StlDict_178_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__StlDict_178_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_178_0_25, 117, G__get_linked_tagnum(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_178_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StlDict_178_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__StlDict_178_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__StlDict_178_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__StlDict_178_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StlDict_178_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__StlDict_178_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStlDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStlDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStlDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStlDict() {
  G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StlDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStlDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StlDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__StlDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupStlDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupStlDict()");
  G__set_cpp_environmentStlDict();
  G__cpp_setup_tagtableStlDict();

  G__cpp_setup_inheritanceStlDict();

  G__cpp_setup_typetableStlDict();

  G__cpp_setup_memvarStlDict();

  G__cpp_setup_memfuncStlDict();
  G__cpp_setup_globalStlDict();
  G__cpp_setup_funcStlDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStlDict();
  return;
}
class G__cpp_setup_initStlDict {
  public:
    G__cpp_setup_initStlDict() { G__add_setup_func("StlDict",(G__incsetup)(&G__cpp_setupStlDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStlDict() { G__remove_setup_func("StlDict"); }
};
G__cpp_setup_initStlDict G__cpp_setup_initializerStlDict;

